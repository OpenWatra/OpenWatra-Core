{
  "runtime": "Net50",
  "defaultVariables": null,
  "documentGenerator": {
    "fromDocument": {
      "json": "openapi: 3.0.0\r\ninfo:\r\n  title: WaTra API\r\n  description: API for the WaTra backend\r\n  version: 0.1.0\r\nservers:\r\n  - url: https://localhost:44361\r\n    description: Development server on local machine.\r\npaths:\r\n  /HoseConnector:\r\n    get:\r\n      summary: Returns a list of hose connectors.\r\n      responses:\r\n        \"200\": # status code\r\n          description: A JSON array of hose connectors\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: \"#/components/schemas/HoseConnector\"\r\n      default:\r\n        description: unexpected error\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: \"#/components/schemas/Error\"\r\n    post:\r\n      description: Creates a new Hose Connector.\r\n      operationId: addHoseConnector\r\n      requestBody:\r\n        description: Hose Connector to add.\r\n        required: true\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: \"#/components/schemas/HoseConnector\"\r\n      responses:\r\n        \"200\":\r\n          description: Response containing the created Hose Connector.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/HoseConnector\"\r\n      default:\r\n        description: unexpected error\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: \"#/components/schemas/Error\"\r\n\r\n  /Validate/HoseConnector:\r\n    post:\r\n      description: Validates a hose connector.\r\n      operationId: validateHoseConnector\r\n      requestBody:\r\n        description: Hose connector to validate.\r\n        required: true\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: \"#/components/schemas/HoseConnector\"\r\n      responses:\r\n        \"200\":\r\n          description: Response contains validation errors, if any occured.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: \"#/components/schemas/ValidationError\"\r\n      default:\r\n        description: unexpected error\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: \"#/components/schemas/Error\"\r\n\r\n  /HoseConnector/{id}:\r\n    get:\r\n      description: Returns a Hose Connector based on the ID.\r\n      operationId: GetHoseConnectorById\r\n      parameters:\r\n        - name: id\r\n          in: path\r\n          description: ID of Hose Connector to fetch\r\n          required: true\r\n          schema:\r\n            type: integer\r\n      responses:\r\n        \"200\":\r\n          description: Hose Connector with the ID.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/HoseConnector\"\r\n      default:\r\n        description: unexpected error\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: \"#/components/schemas/Error\"\r\n    post:\r\n      description: Updates an existing Hose Connector.\r\n      operationId: updateHoseConnector\r\n      requestBody:\r\n        description: Hose Connector to update.\r\n        required: true\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: \"#/components/schemas/HoseConnector\"\r\n      responses:\r\n        \"200\":\r\n          description: Response containing the updated Hose Connector.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/HoseConnector\"\r\n      default:\r\n        description: unexpected error\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: \"#/components/schemas/Error\"\r\n    delete:\r\n      description: Deletes a Hose Connector based on the ID supplied\r\n      operationId: DeleteHoseConnector\r\n      parameters:\r\n        - name: id\r\n          in: path\r\n          description: ID of hose connector to delete\r\n          required: true\r\n          schema:\r\n            type: integer\r\n      responses:\r\n        \"200\":\r\n          description: Hose connector deleted\r\n        default:\r\n          description: unexpected error\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Error\"\r\n\r\n  /Hose:\r\n    get:\r\n      summary: Returns a list of hoses.\r\n      responses:\r\n        \"200\": # status code\r\n          description: A JSON array of hoses\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: \"#/components/schemas/Hose\"\r\n      default:\r\n        description: unexpected error\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: \"#/components/schemas/Error\"\r\n    post:\r\n      description: Creates a new Hose.\r\n      operationId: addHose\r\n      requestBody:\r\n        description: Hose to add.\r\n        required: true\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: \"#/components/schemas/Hose\"\r\n      responses:\r\n        \"200\":\r\n          description: Response containing the created Hose.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Hose\"\r\n      default:\r\n        description: unexpected error\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: \"#/components/schemas/Error\"\r\n\r\n  /Validate/Hose:\r\n    post:\r\n      description: Validates a hose.\r\n      operationId: validateHose\r\n      requestBody:\r\n        description: Hose to validate.\r\n        required: true\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: \"#/components/schemas/Hose\"\r\n      responses:\r\n        \"200\":\r\n          description: Response contains validation errors, if any occured.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: \"#/components/schemas/ValidationError\"\r\n      default:\r\n        description: unexpected error\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: \"#/components/schemas/Error\"\r\n\r\n  /Hose/{id}:\r\n    get:\r\n      description: Returns a Hose based on the ID.\r\n      operationId: GetHoseById\r\n      parameters:\r\n        - name: id\r\n          in: path\r\n          description: ID of Hose to fetch\r\n          required: true\r\n          schema:\r\n            type: integer\r\n      responses:\r\n        \"200\":\r\n          description: Hose with the ID.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Hose\"\r\n      default:\r\n        description: unexpected error\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: \"#/components/schemas/Error\"\r\n    post:\r\n      description: Update an existing hose.\r\n      operationId: updateHose\r\n      requestBody:\r\n        description: Hose to update.\r\n        required: true\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: \"#/components/schemas/Hose\"\r\n      responses:\r\n        \"200\":\r\n          description: Response containing the updated Hose.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Hose\"\r\n      default:\r\n        description: unexpected error\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: \"#/components/schemas/Error\"\r\n    delete:\r\n      description: Deletes a Hose based on the ID supplied\r\n      operationId: DeleteHose\r\n      parameters:\r\n        - name: id\r\n          in: path\r\n          description: ID of hose to delete\r\n          required: true\r\n          schema:\r\n            type: integer\r\n      responses:\r\n        \"200\":\r\n          description: Hose deleted\r\n        default:\r\n          description: unexpected error\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Error\"\r\n\r\n  /Pump:\r\n    get:\r\n      summary: Returns a list of pumps.\r\n      responses:\r\n        \"200\": # status code\r\n          description: A JSON array of pumps\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: \"#/components/schemas/Pump\"\r\n      default:\r\n        description: unexpected error\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: \"#/components/schemas/Error\"\r\n    post:\r\n      description: Creates a new Pump.\r\n      operationId: addPump\r\n      requestBody:\r\n        description: Pump to add.\r\n        required: true\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: \"#/components/schemas/Pump\"\r\n      responses:\r\n        \"200\":\r\n          description: Response containing the created Pump.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Pump\"\r\n      default:\r\n        description: unexpected error\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: \"#/components/schemas/Error\"\r\n\r\n  /Validate/Pump:\r\n    post:\r\n      description: Validates a pump.\r\n      operationId: validatePump\r\n      requestBody:\r\n        description: Pump to validate.\r\n        required: true\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: \"#/components/schemas/Pump\"\r\n      responses:\r\n        \"200\":\r\n          description: Response contains validation errors, if any occured.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: \"#/components/schemas/ValidationError\"\r\n      default:\r\n        description: unexpected error\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: \"#/components/schemas/Error\"\r\n\r\n  /Pump/{id}:\r\n    get:\r\n      description: Returns a Pump based on the ID.\r\n      operationId: GetPumpById\r\n      parameters:\r\n        - name: id\r\n          in: path\r\n          description: ID of Pump to fetch\r\n          required: true\r\n          schema:\r\n            type: integer\r\n      responses:\r\n        \"200\":\r\n          description: Pump with the ID.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Pump\"\r\n      default:\r\n        description: unexpected error\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: \"#/components/schemas/Error\"\r\n    post:\r\n      description: Updates an existing pump\r\n      operationId: updatePump\r\n      requestBody:\r\n        description: Pump to update.\r\n        required: true\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: \"#/components/schemas/Pump\"\r\n      responses:\r\n        \"200\":\r\n          description: Response containing the updated Pump.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Pump\"\r\n      default:\r\n        description: unexpected error\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: \"#/components/schemas/Error\"\r\n    delete:\r\n      description: Deletes a Pump based on the ID supplied\r\n      operationId: DeletePump\r\n      parameters:\r\n        - name: id\r\n          in: path\r\n          description: ID of Pump to delete\r\n          required: true\r\n          schema:\r\n            type: integer\r\n      responses:\r\n        \"200\":\r\n          description: Pump deleted\r\n        default:\r\n          description: unexpected error\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Error\"\r\n\r\n  /WatraRoute:\r\n    get:\r\n      summary: Returns a list of all WatraRoutes.\r\n      responses:\r\n        \"200\": # status code\r\n          description: A JSON array of WatraRoutes\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: \"#/components/schemas/WatraRoute\"\r\n      default:\r\n        description: unexpected error\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: \"#/components/schemas/Error\"\r\n    post:\r\n      description: Creates a new WatraRoute.\r\n      operationId: addWatraRoute\r\n      requestBody:\r\n        description: WatraRoute to add.\r\n        required: true\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: \"#/components/schemas/WatraRoute\"\r\n      responses:\r\n        \"200\":\r\n          description: Response contains te created WatraRoute\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/WatraRoute\"\r\n      default:\r\n        description: unexpected error\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: \"#/components/schemas/Error\"\r\n\r\n  /Validate/WatraRoute:\r\n    post:\r\n      description: Validates a watra route.\r\n      operationId: validateWatraRoute\r\n      requestBody:\r\n        description: WatraRoute to validate.\r\n        required: true\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: \"#/components/schemas/WatraRoute\"\r\n      responses:\r\n        \"200\":\r\n          description: Response contains validation errors, if any occured.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: \"#/components/schemas/ValidationError\"\r\n      default:\r\n        description: unexpected error\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: \"#/components/schemas/Error\"\r\n\r\n  /WatraRoute/{id}:\r\n    get:\r\n      description: Returns a WatraRoute based on the ID.\r\n      operationId: GetWatraRouteById\r\n      parameters:\r\n        - name: id\r\n          in: path\r\n          description: ID of WatraRoute to fetch\r\n          required: true\r\n          schema:\r\n            type: integer\r\n      responses:\r\n        \"200\":\r\n          description: WatraRoute with the ID.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/WatraRoute\"\r\n      default:\r\n        description: unexpected error\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: \"#/components/schemas/Error\"\r\n              \r\n    post:\r\n      description: Updates an existing Watra\r\n      operationId: updateWatra\r\n      requestBody:\r\n        description: Watra to update.\r\n        required: true\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: \"#/components/schemas/WatraRoute\"\r\n      responses:\r\n        \"200\":\r\n          description: Response containing the updated Watra.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/WatraRoute\"\r\n      default:\r\n        description: unexpected error\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: \"#/components/schemas/Error\"\r\n\r\n    delete:\r\n      description: Deletes a WatraRoute based on the ID supplied\r\n      operationId: DeleteWatraRoute\r\n      parameters:\r\n        - name: id\r\n          in: path\r\n          description: ID of WatraRoute to delete\r\n          required: true\r\n          schema:\r\n            type: integer\r\n      responses:\r\n        \"200\":\r\n          description: WatraRoute deleted\r\n        default:\r\n          description: unexpected error\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Error\"\r\n\r\n  /WatraCalculation/{id}:\r\n    get:\r\n      description: Returns the calculation of a given WatraRoute.\r\n      operationId: GetWatraRouteCalculation\r\n      parameters:\r\n        - name: id\r\n          in: path\r\n          description: ID of WatraRoute to fetch\r\n          required: true\r\n          schema:\r\n            type: integer\r\n      responses:\r\n        \"200\":\r\n          description: Calculation of the given WatraRoute and PumpSelection.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/WatraCalculation\"\r\n      default:\r\n        description: unexpected error\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: \"#/components/schemas/Error\"\r\n\r\ncomponents:\r\n  schemas:\r\n    Error:\r\n      type: object\r\n      required:\r\n        - code\r\n        - message\r\n      properties:\r\n        code:\r\n          type: integer\r\n          format: int32\r\n        message:\r\n          type: string\r\n\r\n    HoseConnector:\r\n      type: object\r\n      properties:\r\n        Id:\r\n          type: integer\r\n        Name:\r\n          type: string\r\n          description: Display name.\r\n        Diameter:\r\n          type: number\r\n          minimum: 1\r\n          description: Diameter of the connector.\r\n        UniqueId:\r\n          type: string\r\n          default: \"00000000-0000-0000-0000-000000000000\"\r\n          description: The unique ID can be used to determine whether two hose connectors can be connected.\r\n      required:\r\n        - Id\r\n        - Name\r\n        - Diameter\r\n        - UniqueId\r\n\r\n    Hose:\r\n      type: object\r\n      properties:\r\n        Id:\r\n          type: integer\r\n        Name:\r\n          type: string\r\n          description: Display name.\r\n        ElementLengthInMetres:\r\n          type: number\r\n          minimum: 1\r\n          description: Describes how long a single hose element is.\r\n        HoseConnector:\r\n          $ref: \"#/components/schemas/HoseConnector\"\r\n      required:\r\n        - Id\r\n        - Name\r\n        - ElementLenthInMetres\r\n        - HoseConnector\r\n    Pump:\r\n      type: object\r\n      properties:\r\n        Id:\r\n          type: integer\r\n        Name:\r\n          type: string\r\n          description: Display name.\r\n        HoseConnector:\r\n          $ref: \"#/components/schemas/HoseConnector\"\r\n        Hose:\r\n          $ref: \"#/components/schemas/Hose\"\r\n        NumberOfHoses:\r\n          type: integer\r\n          minimum: 0\r\n          description: How many hoses are carried with the pump.\r\n        MaxFlowRateLitresPerMinute:\r\n          type: number\r\n          minimum: 1\r\n          description: Amount of litres which the pump can move at its maximum capacity.\r\n        MaxOutletPressureBar:\r\n          type: number\r\n          minimum: 1\r\n          description: Max outlet pressure of the pump in bar.\r\n        PumpPressureFlowModel:\r\n          type: array\r\n          description: Polynomial of type y=a[0]+a[1]*x+a[2]*x^2 + ..., where x is the flow rate (l/min) and y is the maximum pump pressure (bar)\r\n          items:\r\n            $ref: \"#/components/schemas/PumpPressureFlowModelCoefficient\"\r\n      required:\r\n        - Id\r\n        - Name\r\n        - Connectors\r\n        - MaxFlowRateLitresPerMinute\r\n        - MaxOutletPressureBar\r\n\r\n    PumpPressureFlowModelCoefficient:\r\n      type: object\r\n      properties:\r\n        Id:\r\n          type: integer\r\n        Coefficient:\r\n          type: number\r\n          description: Polynomal coefficient.\r\n        Exponent:\r\n          type: integer\r\n          desciption: Exponent of current polynomial.\r\n      required:\r\n        - Id\r\n        - Coefficient\r\n\r\n    WatraRoute:\r\n      type: object\r\n      properties:\r\n        Id:\r\n          type: integer\r\n        Name:\r\n          type: string\r\n          description: Display name.\r\n        Description:\r\n          type: string\r\n          description: Description of the route.\r\n        IsActiveWatra:\r\n          type: boolean\r\n          description: This WatraRoute is released and active, i.e. can be viewed by others and material is booked from inventory.\r\n        FlowRate:\r\n          type: number\r\n          description: Flow rate in water transport, Unit l/min\r\n        MinimalOutletPressure:\r\n          type: number\r\n          description: Minimal pressure at the end of hose line, Unit bar\r\n        SafetyPressure:\r\n          type: number\r\n          description: Safety pressure that is used as safety factor during calculation (at least 2 bar recommended), Unit bar\r\n        WatraRouteDistanceHeightElements:\r\n          type: array\r\n          description: Joined distances and height differences of Watra between all way points, Unit m\r\n          items:\r\n            $ref: \"#/components/schemas/WatraRouteDistanceHeightElement\"\r\n        PumpSelections:\r\n          type: array\r\n          description: Desired selection and order of pump placement along route.\r\n          items:\r\n            $ref: \"#/components/schemas/PumpSelection\"\r\n      required:\r\n        - Id\r\n        - Name\r\n        - FlowRate\r\n        - MinimalOutletPressure\r\n        - WatraRouteDistanceHeightElement\r\n        - PumpSelections\r\n\r\n    WatraRouteDistanceHeightElement:\r\n      type: object\r\n      properties:\r\n        Id:\r\n          type: integer\r\n        SortOrder:\r\n          type: integer\r\n          description: Sort order of the element\r\n        Length:\r\n          type: number\r\n          description: Length of this part of the WatraRoute, Unit m\r\n        HeightDifference:\r\n          type: number\r\n          description: Height difference between start and end point of this part of the WatraRoute, Unit m\r\n      required:\r\n        - Id\r\n        - Distance\r\n        - HeightDifference\r\n\r\n    PumpSelection:\r\n      type: object\r\n      properties:\r\n        Id:\r\n          type: integer\r\n        SortOrder:\r\n          type: integer\r\n          description: Sort order of the element\r\n        NumberOfHoseLines:\r\n          type: integer\r\n          minimum: 1\r\n          maximum: 2\r\n          description: Desired number of parallel hose lines between pumps, Unit l, 1..2\r\n        Pump:\r\n          $ref: \"#/components/schemas/Pump\"\r\n      required:\r\n        - Id\r\n        - NumberOfHoseLines\r\n        - Pump\r\n\r\n    WatraCalculation:\r\n      type: object\r\n      properties:\r\n        Name:\r\n          type: string\r\n          description: Display name.\r\n        Description:\r\n          type: string\r\n          description: Description of the route.\r\n        SafetyPressure:\r\n          description: Safety pressure used to calculate this Watra, Unit bar\r\n          type: number\r\n        ActualFlowRate:\r\n          description: Flowrate used in this Watra section, Unit l/min\r\n          type: number\r\n        RemainingDistance:\r\n          description: Remaining distance to the end of the Watra, Unit m\r\n          type: number\r\n        WatraCalculationSection:\r\n          type: array\r\n          Description: The Watra is divided in sections, each section has its own pump.\r\n          items:\r\n            $ref: \"#/components/schemas/WatraCalculationSection\"\r\n        WatraCalculationMessage:\r\n          type: array\r\n          Description: Messages concerning the calculation of the Watra.\r\n          items:\r\n            $ref: \"#/components/schemas/WatraCalculationMessage\"\r\n\r\n    WatraCalculationSection:\r\n      type: object\r\n      properties:\r\n        SectionLength:\r\n          type: number\r\n          description: Length of this section of the Watra, Unit m\r\n        HeightDifference:\r\n          type: number\r\n          description: Height difference between start and end point of this section of the Watra, Unit m\r\n        HeightPeak:\r\n          description: Heighest point above start point of this section, Unit m\r\n          type: number\r\n        PressureAtSectionStart:\r\n          description: Set pressure of pump, i.e. start pressure of this section, Unit bar\r\n          type: number\r\n        PressureLossHeight:\r\n          description: Pressure loss in this section due to height, Unit bar\r\n          type: number\r\n        PressureLossFriction:\r\n          description: Pressure loss in this section due to hydrodynamic friction in all hose lines, Unit bar\r\n          type: number\r\n        PressureAtSectionEnd:\r\n          description: Pressure at end of hose line of this section, Unit bar\r\n          type: number       \r\n        NameOfPump:\r\n          description: Pump used in this Watra section.\r\n          type: string     \r\n        NameOfConnector:\r\n          description: Name of used connector.\r\n          type: string\r\n        DiameterConnector:\r\n          description: Diameter of used connector, Unit mm\r\n          type: number\r\n        NumberOfHoseLines:\r\n          description: Number of hose lines in this section.\r\n          type: integer\r\n        TotalHosesUsed:\r\n          description: Total number of hoses used.\r\n          type: integer\r\n        ExternalHosesNeeded:\r\n          description: Number of hoses used that are not stored on the pump.\r\n          type: integer\r\n          \r\n    WatraCalculationMessage:\r\n      type: object\r\n      properties:\r\n        Message:\r\n          description: Message.\r\n          type: string\r\n        Severity:\r\n          description: Severity, either error, warning or info\r\n          type: string\r\n\r\n    ValidationError:\r\n      type: object\r\n      properties:\r\n        Message:\r\n          description: Message describing the error\r\n          type: string\r\n        Property:\r\n          description: Property concerned by the validation error\r\n          type: string\r\n",
      "url": "",
      "output": null,
      "newLineBehavior": "Auto"
    }
  },
  "codeGenerators": {
    "openApiToCSharpClient": {
      "clientBaseClass": null,
      "configurationClass": null,
      "generateClientClasses": true,
      "generateClientInterfaces": false,
      "clientBaseInterface": null,
      "injectHttpClient": true,
      "disposeHttpClient": true,
      "protectedMethods": [],
      "generateExceptionClasses": true,
      "exceptionClass": "ApiException",
      "wrapDtoExceptions": true,
      "useHttpClientCreationMethod": false,
      "httpClientType": "System.Net.Http.HttpClient",
      "useHttpRequestMessageCreationMethod": false,
      "useBaseUrl": true,
      "generateBaseUrlProperty": true,
      "generateSyncMethods": false,
      "generatePrepareRequestAndProcessResponseAsAsyncMethods": false,
      "exposeJsonSerializerSettings": false,
      "clientClassAccessModifier": "public",
      "typeAccessModifier": "public",
      "generateContractsOutput": false,
      "contractsNamespace": null,
      "contractsOutputFilePath": null,
      "parameterDateTimeFormat": "s",
      "parameterDateFormat": "yyyy-MM-dd",
      "generateUpdateJsonSerializerSettingsMethod": true,
      "useRequestAndResponseSerializationSettings": false,
      "serializeTypeInformation": false,
      "queryNullValue": "",
      "className": "{controller}Client",
      "operationGenerationMode": "MultipleClientsFromOperationId",
      "additionalNamespaceUsages": [],
      "additionalContractNamespaceUsages": [],
      "generateOptionalParameters": false,
      "generateJsonMethods": false,
      "enforceFlagEnums": false,
      "parameterArrayType": "System.Collections.Generic.IEnumerable",
      "parameterDictionaryType": "System.Collections.Generic.IDictionary",
      "responseArrayType": "System.Collections.Generic.ICollection",
      "responseDictionaryType": "System.Collections.Generic.IDictionary",
      "wrapResponses": false,
      "wrapResponseMethods": [],
      "generateResponseClasses": true,
      "responseClass": "SwaggerResponse",
      "namespace": "Watra.Api.Data.ApiClient",
      "requiredPropertiesMustBeDefined": true,
      "dateType": "System.DateTimeOffset",
      "jsonConverters": null,
      "anyType": "object",
      "dateTimeType": "System.DateTimeOffset",
      "timeType": "System.TimeSpan",
      "timeSpanType": "System.TimeSpan",
      "arrayType": "System.Collections.Generic.ICollection",
      "arrayInstanceType": "System.Collections.ObjectModel.Collection",
      "dictionaryType": "System.Collections.Generic.IDictionary",
      "dictionaryInstanceType": "System.Collections.Generic.Dictionary",
      "arrayBaseType": "System.Collections.ObjectModel.Collection",
      "dictionaryBaseType": "System.Collections.Generic.Dictionary",
      "classStyle": "Poco",
      "jsonLibrary": "NewtonsoftJson",
      "generateDefaultValues": true,
      "generateDataAnnotations": true,
      "excludedTypeNames": [],
      "excludedParameterNames": [],
      "handleReferences": false,
      "generateImmutableArrayProperties": false,
      "generateImmutableDictionaryProperties": false,
      "jsonSerializerSettingsTransformationMethod": null,
      "inlineNamedArrays": false,
      "inlineNamedDictionaries": false,
      "inlineNamedTuples": true,
      "inlineNamedAny": false,
      "generateDtoTypes": true,
      "generateOptionalPropertiesAsNullable": false,
      "generateNullableReferenceTypes": false,
      "templateDirectory": null,
      "typeNameGeneratorType": null,
      "propertyNameGeneratorType": null,
      "enumNameGeneratorType": null,
      "checksumCacheEnabled": false,
      "serviceHost": null,
      "serviceSchemes": null,
      "output": null,
      "newLineBehavior": "Auto"
    },
    "openApiToCSharpController": {
      "controllerBaseClass": null,
      "controllerStyle": "Partial",
      "controllerTarget": "AspNetCore",
      "useCancellationToken": false,
      "useActionResultType": false,
      "generateModelValidationAttributes": true,
      "routeNamingStrategy": "OperationId",
      "basePath": null,
      "className": "WatraMasterDataApi",
      "operationGenerationMode": "MultipleClientsFromOperationId",
      "additionalNamespaceUsages": [],
      "additionalContractNamespaceUsages": [],
      "generateOptionalParameters": false,
      "generateJsonMethods": false,
      "enforceFlagEnums": false,
      "parameterArrayType": "System.Collections.Generic.IEnumerable",
      "parameterDictionaryType": "System.Collections.Generic.IDictionary",
      "responseArrayType": "System.Collections.Generic.ICollection",
      "responseDictionaryType": "System.Collections.Generic.IDictionary",
      "wrapResponses": false,
      "wrapResponseMethods": [],
      "generateResponseClasses": true,
      "responseClass": "SwaggerResponse",
      "namespace": "WaTra.Api.Server",
      "requiredPropertiesMustBeDefined": true,
      "dateType": "System.DateTimeOffset",
      "jsonConverters": null,
      "anyType": "object",
      "dateTimeType": "System.DateTimeOffset",
      "timeType": "System.TimeSpan",
      "timeSpanType": "System.TimeSpan",
      "arrayType": "System.Collections.Generic.List",
      "arrayInstanceType": "System.Collections.Generic.List",
      "dictionaryType": "System.Collections.Generic.IDictionary",
      "dictionaryInstanceType": "System.Collections.Generic.Dictionary",
      "arrayBaseType": "System.Collections.ObjectModel.Collection",
      "dictionaryBaseType": "System.Collections.Generic.Dictionary",
      "classStyle": "Poco",
      "jsonLibrary": "NewtonsoftJson",
      "generateDefaultValues": true,
      "generateDataAnnotations": true,
      "excludedTypeNames": [],
      "excludedParameterNames": [],
      "handleReferences": false,
      "generateImmutableArrayProperties": false,
      "generateImmutableDictionaryProperties": false,
      "jsonSerializerSettingsTransformationMethod": null,
      "inlineNamedArrays": false,
      "inlineNamedDictionaries": false,
      "inlineNamedTuples": true,
      "inlineNamedAny": false,
      "generateDtoTypes": true,
      "generateOptionalPropertiesAsNullable": false,
      "generateNullableReferenceTypes": false,
      "templateDirectory": null,
      "typeNameGeneratorType": null,
      "propertyNameGeneratorType": null,
      "enumNameGeneratorType": null,
      "checksumCacheEnabled": false,
      "serviceHost": null,
      "serviceSchemes": null,
      "output": null,
      "newLineBehavior": "Auto"
    }
  }
}